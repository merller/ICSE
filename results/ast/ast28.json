[
    {
        "functionName": "installed",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ReturnStatement",
                                "statement": "return this.init()",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "updated",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.unsubscribe()",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return this.init()",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "init",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.subscribe(people, presence, presence)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.subscribe(location, sunrise, setSunrise)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.subscribe(location, sunset, setSunset)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return (state.sunMode = location.mode)",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "setSunrise",
        "arguments": "evt",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ReturnStatement",
                                "statement": "return this.changeSunMode(newSunriseMode)",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "setSunset",
        "arguments": "evt",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ReturnStatement",
                                "statement": "return this.changeSunMode(newSunsetMode)",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "changeSunMode",
        "arguments": "newMode",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "(state.sunMode = newMode)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "(this.everyoneIsAway() && (location.mode == newAwayMode))",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "statement": "return log.debug(Mode is away, not evaluating)",
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": {
                                    "type": "IfStatement",
                                    "statement": "If statement",
                                    "condition": {
                                        "type": "BooleanExpression",
                                        "expression": "(location.mode != newMode)",
                                        "children": [
                                            
                                        ]
                                    },
                                    "ifBlock": {
                                        "type": "BlockStatement",
                                        "statement": "Block statement",
                                        "children": [
                                            {
                                                "type": "ExpressionStatement",
                                                "statement": "def message = ${app.label} changed your mode to '$newMode'",
                                                "children": [
                                                    
                                                ]
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "statement": "this.send(message)",
                                                "children": [
                                                    
                                                ]
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "statement": "return this.setLocationMode(newMode)",
                                                "children": [
                                                    
                                                ]
                                            }
                                        ]
                                    },
                                    "elseBlock": {
                                        "type": "BlockStatement",
                                        "statement": "Block statement",
                                        "children": [
                                            {
                                                "type": "ReturnStatement",
                                                "statement": "return log.debug(Mode is the same, not evaluating)",
                                                "children": [
                                                    
                                                ]
                                            }
                                        ]
                                    },
                                    "children": [
                                        
                                    ]
                                },
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "presence",
        "arguments": "evt",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "(evt.value == not present)",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "statement": "log.debug(Checking if everyone is away)",
                                            "children": [
                                                
                                            ]
                                        },
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "this.everyoneIsAway()",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "log.info(Starting $newAwayMode sequence)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "def delay = (((awayThreshold != null) && (awayThreshold != ))) ? (awayThreshold * 60) : (10 * 60)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "statement": "return this.runIn(delay, setAway)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": null,
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "(location.mode != state.sunMode)",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "log.debug(Checking if anyone is home)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "statement": "If statement",
                                                        "condition": {
                                                            "type": "BooleanExpression",
                                                            "expression": "this.anyoneIsHome()",
                                                            "children": [
                                                                
                                                            ]
                                                        },
                                                        "ifBlock": {
                                                            "type": "BlockStatement",
                                                            "statement": "Block statement",
                                                            "children": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "statement": "log.info(Starting ${state.sunMode} sequence)",
                                                                    "children": [
                                                                        
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "statement": "return this.changeSunMode(state.sunMode)",
                                                                    "children": [
                                                                        
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "elseBlock": null,
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "statement": "return log.debug(Mode is the same, not evaluating)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    },
    {
        "functionName": "setAway",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "this.everyoneIsAway()",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "(location.mode != newAwayMode)",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "def message = ${app.label} changed your mode to '$newAwayMode' because everyone left home",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "log.info(message)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "this.send(message)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "statement": "return this.setLocationMode(newAwayMode)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "statement": "return log.debug(Mode is the same, not evaluating)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "statement": "return log.info(Somebody returned home before we set to '$newAwayMode')",
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position."
    }
]