[
    {
        "functionName": "installed",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ReturnStatement",
                                "statement": "return this.initialize()",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "updated",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.unsubscribe()",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.initialize()",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return log.debug((state:  + state.myState))",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "initialize",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.subscribe(switches, switch, switchChange)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.subscribe(motions, motion, motionHandler)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.subscribe(contacts, contact, contactHandler)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.runEvery1Minute(scheduleCheck)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return (state.myState = ready)",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "switchChange",
        "arguments": "evt",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "log.debug(SwitchChange: ${evt.name}: ${evt.value})",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "(evt.value == on)",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "(state.myState == activating)",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "(state.myState = active)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": {
                                                "type": "IfStatement",
                                                "statement": "If statement",
                                                "condition": {
                                                    "type": "BooleanExpression",
                                                    "expression": "(state.myState != active)",
                                                    "children": [
                                                        
                                                    ]
                                                },
                                                "ifBlock": {
                                                    "type": "BlockStatement",
                                                    "statement": "Block statement",
                                                    "children": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "statement": "(state.myState = already on)",
                                                            "children": [
                                                                
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "elseBlock": null,
                                                "children": [
                                                    
                                                ]
                                            },
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "((state.myState == active) || (state.myState == activating))",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "this.unschedule()",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": null,
                                            "children": [
                                                
                                            ]
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "statement": "(state.myState = ready)",
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return log.debug((state:  + state.myState))",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "contactHandler",
        "arguments": "evt",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "log.debug(contactHandler: ${evt.name}: ${evt.value})",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "(evt.value == open)",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "(state.myState == ready)",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "log.debug(Turning on lights by contact opening)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "switches.on()",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "(state.inactiveAt = null)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "(state.myState = activating)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": null,
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": {
                                    "type": "IfStatement",
                                    "statement": "If statement",
                                    "condition": {
                                        "type": "BooleanExpression",
                                        "expression": "(evt.value == closed)",
                                        "children": [
                                            
                                        ]
                                    },
                                    "ifBlock": {
                                        "type": "BlockStatement",
                                        "statement": "Block statement",
                                        "children": [
                                            {
                                                "type": "IfStatement",
                                                "statement": "If statement",
                                                "condition": {
                                                    "type": "BooleanExpression",
                                                    "expression": "((state.inactiveAt && (state.myState == active)) || (state.myState == activating))",
                                                    "children": [
                                                        
                                                    ]
                                                },
                                                "ifBlock": {
                                                    "type": "BlockStatement",
                                                    "statement": "Block statement",
                                                    "children": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "statement": "this.setActiveAndSchedule()",
                                                            "children": [
                                                                
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "elseBlock": null,
                                                "children": [
                                                    
                                                ]
                                            }
                                        ]
                                    },
                                    "elseBlock": null,
                                    "children": [
                                        
                                    ]
                                },
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return log.debug((state:  + state.myState))",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "motionHandler",
        "arguments": "evt",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "log.debug(motionHandler: ${evt.name}: ${evt.value})",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "(evt.value == active)",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "(((state.myState == ready) || (state.myState == active)) || (state.myState == activating))",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "log.debug(turning on lights)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "switches.on()",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "(state.inactiveAt = null)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "(state.myState = activating)",
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": null,
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": {
                                    "type": "IfStatement",
                                    "statement": "If statement",
                                    "condition": {
                                        "type": "BooleanExpression",
                                        "expression": "(evt.value == inactive)",
                                        "children": [
                                            
                                        ]
                                    },
                                    "ifBlock": {
                                        "type": "BlockStatement",
                                        "statement": "Block statement",
                                        "children": [
                                            {
                                                "type": "IfStatement",
                                                "statement": "If statement",
                                                "condition": {
                                                    "type": "BooleanExpression",
                                                    "expression": "((state.inactiveAt && (state.myState == active)) || (state.myState == activating))",
                                                    "children": [
                                                        
                                                    ]
                                                },
                                                "ifBlock": {
                                                    "type": "BlockStatement",
                                                    "statement": "Block statement",
                                                    "children": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "statement": "this.setActiveAndSchedule()",
                                                            "children": [
                                                                
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "elseBlock": null,
                                                "children": [
                                                    
                                                ]
                                            }
                                        ]
                                    },
                                    "elseBlock": null,
                                    "children": [
                                        
                                    ]
                                },
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return log.debug((state:  + state.myState))",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "setActiveAndSchedule",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "this.unschedule()",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "(state.myState = active)",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "statement": "(state.inactiveAt = this.now())",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return this.runEvery1Minute(scheduleCheck)",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    },
    {
        "functionName": "scheduleCheck",
        "arguments": "",
        "ast": [
            {
                "type": "BlockStatement",
                "statement": "Block statement",
                "children": [
                    {
                        "type": "BlockStatement",
                        "statement": "Block statement",
                        "children": [
                            {
                                "type": "ExpressionStatement",
                                "statement": "log.debug(schedule check, ts = ${state.inactiveAt})",
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "IfStatement",
                                "statement": "If statement",
                                "condition": {
                                    "type": "BooleanExpression",
                                    "expression": "(state.myState != already on)",
                                    "children": [
                                        
                                    ]
                                },
                                "ifBlock": {
                                    "type": "BlockStatement",
                                    "statement": "Block statement",
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "statement": "If statement",
                                            "condition": {
                                                "type": "BooleanExpression",
                                                "expression": "(state.inactiveAt != null)",
                                                "children": [
                                                    
                                                ]
                                            },
                                            "ifBlock": {
                                                "type": "BlockStatement",
                                                "statement": "Block statement",
                                                "children": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "def elapsed = (this.now() - state.inactiveAt)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "log.debug(${(elapsed / 1000)} sec since motion stopped)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "statement": "def threshold = ((1000 * 60) * minutes1)",
                                                        "children": [
                                                            
                                                        ]
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "statement": "If statement",
                                                        "condition": {
                                                            "type": "BooleanExpression",
                                                            "expression": "(elapsed >= threshold)",
                                                            "children": [
                                                                
                                                            ]
                                                        },
                                                        "ifBlock": {
                                                            "type": "BlockStatement",
                                                            "statement": "Block statement",
                                                            "children": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "statement": "If statement",
                                                                    "condition": {
                                                                        "type": "BooleanExpression",
                                                                        "expression": "(state.myState == active)",
                                                                        "children": [
                                                                            
                                                                        ]
                                                                    },
                                                                    "ifBlock": {
                                                                        "type": "BlockStatement",
                                                                        "statement": "Block statement",
                                                                        "children": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "statement": "log.debug(turning off lights)",
                                                                                "children": [
                                                                                    
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "statement": "switches.off()",
                                                                                "children": [
                                                                                    
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "elseBlock": null,
                                                                    "children": [
                                                                        
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "statement": "(state.inactiveAt = null)",
                                                                    "children": [
                                                                        
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "statement": "(state.myState = ready)",
                                                                    "children": [
                                                                        
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "elseBlock": null,
                                                        "children": [
                                                            
                                                        ]
                                                    }
                                                ]
                                            },
                                            "elseBlock": null,
                                            "children": [
                                                
                                            ]
                                        }
                                    ]
                                },
                                "elseBlock": null,
                                "children": [
                                    
                                ]
                            },
                            {
                                "type": "ReturnStatement",
                                "statement": "return log.debug((state:  + state.myState))",
                                "children": [
                                    
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "docstring": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled."
    }
]